#!/bin/sh
#
# CBT
# Copyright (c) 2020 Jovan Lanik
#

# C language Basic Template generator

export LC_ALL=C

usage() {
cat << EOF
Usage: cbt [OPTIONS] NAME [COMMENT]
	-h	show usage and exit
	-f	include a main function
	-o=FILE	write to FILE instead of stdout
	-a=NAME	change author (in copyright notice)

	-e	include errno.h
	-m	include math.h
	-b	include stdbool.h
	-i	include stdio.h
	-l	include stdlib.h
	-s	include string.h

	NAME is printed to the header of the file and should be the project name.
	It defaults to the the basename of \`git config --get remote.origin.url\` or
	\`pwd\` if the first fails.

	COMMENT is printed bellow the header and should explain the project or file.
	It defaults to 'NAME source'.

	Author is printed in the copyright notice.
	It defaults to \`git config --get user.name\` or \`whoami\` if the first fails.

	cbt also sources .cbt in \`git rev-parse --show-toplevel\` and the current
	directory, so any variables may be overwriten there. For example:

		name='CBT'
		comment='C language Basic Template generator'
		author='Jovan Lanik'
		libs='#include <pthreads.h>\n'
	
	Priority from lowest to highest is defaults, environment, .cbt, arguments.
	Libraries in .cbt are added not overwriten. Duplicates are removed.
EOF
exit 0
}

error() {
	echo "$0: $1." >&2
	exit 1
}

opts='hfoa:'
libopt='embils'
while getopts ":${opts}${libopt}" opt
do
	case $opt in
		h) usage;;
		f) main=$(
cat << EOF


int main(int argc, char **argv[]) {
	return 0;
}
EOF
		);;
		o) output=$OPTARG;;
		a) author=$OPTARG;;

		e) libs="$libs#include <errno.h>\n";;
		m) libs="$libs#include <math.h>\n";;
		b) libs="$libs#include <stdbool.h>\n";;
		i) libs="$libs#include <stdio.h>\n";;
		l) libs="$libs#include <stdlib.h>\n";;
		s) libs="$libs#include <string.h>\n";;

		:) error "Option -$OPTARG requires an argument. Use -h to see usage";;
		\?) error "Invalid option: -$OPTARG. Use -h to see usage";;
	esac
done
shift "$((OPTIND-1))"

defaultname=$(basename "$(git config --get remote.origin.url)" '.git')
[ "$defaultname" ] || defaultname=$(basename "$(pwd)")

defaultauthor=$(git config --get user.name)
[ "$defaultauthor" ] || defaultauthor=$(whoami)

gitroot=$(git rev-parse --show-toplevel 2>/dev/null)
[ "$gitroot" ] && [ -f "$gitroot/.cbt" ] && . "$gitroot/.cbt"
[ -f .cbt ] && . ./.cbt

[ "$1" ] && name=$1
[ "$2" ] && { shift; comment=$*; }
[ "$libs" ] && { libs=$(printf "$libs" | sort -u); libs=$(printf "\n\n%s" "$libs"); }

{
cat << EOF
//
// ${name:=$defaultname}
// Copyright (c) $(date '+%Y') ${author:=$defaultauthor}
//

// ${comment:=$name source}${libs}${main}

EOF
} > "${output:=/dev/stdout}"
